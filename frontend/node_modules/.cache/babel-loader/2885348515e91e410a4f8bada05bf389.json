{"ast":null,"code":"import _defineProperty from \"/Users/fixsc/Documents/eosioProject/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/fixsc/Documents/eosioProject/frontend/src/components/Login/Login.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // Components\n\nimport { Button } from 'components'; // Services and redux action\n\nimport { UserAction } from 'actions';\nimport { ApiService } from 'services';\n\nclass Login extends Component {\n  constructor(props) {\n    // Inherit constructor\n    super(props); // State for form data and error message\n\n    this.state = {\n      form: {\n        username: '',\n        key: '',\n        error: ''\n      },\n      isSigningIn: false\n    }; // Bind functions\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // Runs on every keystroke to update the React state\n\n\n  handleChange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    const form = this.state.form;\n    this.setState({\n      form: _objectSpread({}, form, {\n        [name]: value,\n        error: ''\n      })\n    });\n  }\n\n  componentDidMount() {\n    this.isComponentMounted = true;\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  } // Handle form submission to call api\n\n\n  handleSubmit(event) {\n    // Stop the default form submit browser behaviour\n    event.preventDefault(); // Extract `form` state\n\n    const form = this.state.form; // Extract `setUser` of `UserAction` and `user.name` of UserReducer from redux\n\n    const setUser = this.props.setUser; // Set loading spinner to the button\n\n    this.setState({\n      isSigningIn: true\n    }); // Send a login transaction to the blockchain by calling the ApiService,\n    // If it successes, save the username to redux store\n    // Otherwise, save the error state for displaying the message\n\n    return ApiService.login(form).then(() => {\n      setUser({\n        name: form.username\n      });\n    }).catch(err => {\n      this.setState({\n        error: err.toString()\n      });\n    }).finally(() => {\n      if (this.isComponentMounted) {\n        this.setState({\n          isSigningIn: false\n        });\n      }\n    });\n  }\n\n  render() {\n    // Extract data from state\n    const _this$state = this.state,\n          form = _this$state.form,\n          error = _this$state.error,\n          isSigningIn = _this$state.isSigningIn;\n    return React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Elemental Battles - powered by EOSIO\"), React.createElement(\"div\", {\n      className: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Please use the Account Name and Private Key.\"), React.createElement(\"form\", {\n      name: \"form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Account name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: form.username,\n      placeholder: \"All small letters, a-z, 1-5 or dot, max 12 characters\",\n      onChange: this.handleChange,\n      pattern: \"[\\\\.a-z1-5]{2,12}\",\n      required: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Private key\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"key\",\n      value: form.key,\n      onChange: this.handleChange,\n      pattern: \"^.{51,}$\",\n      required: true,\n      autoComplete: \"new-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field form-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, error && React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, error)), React.createElement(\"div\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      className: \"green\",\n      loading: isSigningIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"CONFIRM\"))));\n  }\n\n} // Map all state to component props (for redux to connect)\n\n\nconst mapStateToProps = state => state; // Map the following action to props\n\n\nconst mapDispatchToProps = {\n  setUser: UserAction.setUser\n}; // Export a redux connected component\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/fixsc/Documents/eosioProject/frontend/src/components/Login/Login.jsx"],"names":["React","Component","connect","Button","UserAction","ApiService","Login","constructor","props","state","form","username","key","error","isSigningIn","handleChange","bind","handleSubmit","event","target","name","value","setState","componentDidMount","isComponentMounted","componentWillUnmount","preventDefault","setUser","login","then","catch","err","toString","finally","render","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// Components\nimport { Button } from 'components';\n// Services and redux action\nimport { UserAction } from 'actions';\nimport { ApiService } from 'services';\n\nclass Login extends Component {\n\n  constructor(props) {\n    // Inherit constructor\n    super(props);\n    // State for form data and error message\n    this.state = {\n      form: {\n        username: '',\n        key: '',\n        error: '',\n      },\n      isSigningIn: false,\n    }\n    // Bind functions\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // Runs on every keystroke to update the React state\n  handleChange(event) {\n    const { name, value } = event.target;\n    const { form } = this.state;\n\n    this.setState({\n      form: {\n        ...form,\n        [name]: value,\n        error: '',\n      },\n    });\n  }\n\n  componentDidMount() {\n    this.isComponentMounted = true;\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n  }\n\n  // Handle form submission to call api\n  handleSubmit(event) {\n    // Stop the default form submit browser behaviour\n    event.preventDefault();\n    // Extract `form` state\n    const { form } = this.state;\n    // Extract `setUser` of `UserAction` and `user.name` of UserReducer from redux\n    const { setUser } = this.props;\n    // Set loading spinner to the button\n    this.setState({ isSigningIn: true });\n    // Send a login transaction to the blockchain by calling the ApiService,\n    // If it successes, save the username to redux store\n    // Otherwise, save the error state for displaying the message\n    return ApiService.login(form)\n      .then(() => {\n        setUser({ name: form.username });\n      })\n      .catch(err => {\n        this.setState({ error: err.toString() });\n      })\n      .finally(() => {\n        if (this.isComponentMounted) {\n          this.setState({ isSigningIn: false });\n        }\n      });\n  }\n\n  render() {\n    // Extract data from state\n    const { form, error, isSigningIn } = this.state;\n\n    return (\n      <div className=\"Login\">\n        <div className=\"title\">Elemental Battles - powered by EOSIO</div>\n        <div className=\"description\">Please use the Account Name and Private Key.</div>\n        <form name=\"form\" onSubmit={ this.handleSubmit }>\n          <div className=\"field\">\n            <label>Account name</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={ form.username }\n              placeholder=\"All small letters, a-z, 1-5 or dot, max 12 characters\"\n              onChange={ this.handleChange }\n              pattern=\"[\\.a-z1-5]{2,12}\"\n              required\n              autoComplete=\"off\"\n            />\n          </div>\n          <div className=\"field\">\n            <label>Private key</label>\n            <input\n              type=\"password\"\n              name=\"key\"\n              value={ form.key }\n              onChange={ this.handleChange }\n              pattern=\"^.{51,}$\"\n              required\n              autoComplete=\"new-password\"\n            />\n          </div>\n          <div className=\"field form-error\">\n            { error && <span className=\"error\">{ error }</span> }\n          </div>\n          <div className=\"bottom\">\n            <Button type=\"submit\" className=\"green\" loading={ isSigningIn }>\n              { \"CONFIRM\" }\n            </Button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n// Map all state to component props (for redux to connect)\nconst mapStateToProps = state => state;\n\n// Map the following action to props\nconst mapDispatchToProps = {\n  setUser: UserAction.setUser,\n};\n\n// Export a redux connected component\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}